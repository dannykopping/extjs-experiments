<?php

/**
 * BaseGeographicInfo
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $country
 * @property string $language
 * @property string $iso2
 * @property string $region1
 * @property string $region2
 * @property string $region3
 * @property string $region4
 * @property string $zip
 * @property string $city
 * @property string $area1
 * @property string $area2
 * @property double $lat
 * @property double $lng
 * @property string $tz
 * @property string $utc
 * @property string $dst
 *
 */
abstract class BaseGeographicInfo extends Aerial_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('GeographicInfo');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => '4',
             ));
        $this->hasColumn('country', 'string', 2, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '2',
             ));
        $this->hasColumn('language', 'string', 2, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '2',
             ));
        $this->hasColumn('iso2', 'string', 6, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '6',
             ));
        $this->hasColumn('region1', 'string', 60, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '60',
             ));
        $this->hasColumn('region2', 'string', 60, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '60',
             ));
        $this->hasColumn('region3', 'string', 60, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '60',
             ));
        $this->hasColumn('region4', 'string', 60, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '60',
             ));
        $this->hasColumn('zip', 'string', 10, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '10',
             ));
        $this->hasColumn('city', 'string', 60, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '60',
             ));
        $this->hasColumn('area1', 'string', 80, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '80',
             ));
        $this->hasColumn('area2', 'string', 80, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '80',
             ));
        $this->hasColumn('lat', 'double', null, array(
             'type' => 'double',
             ));
        $this->hasColumn('lng', 'double', null, array(
             'type' => 'double',
             ));
        $this->hasColumn('tz', 'string', 30, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '30',
             ));
        $this->hasColumn('utc', 'string', 10, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '10',
             ));
        $this->hasColumn('dst', 'string', 1, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '1',
             ));

        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
        $this->option('type', 'InnoDB');
    }

    public function setUp()
    {
        parent::setUp();
        
    }

    public function construct()
    {
        $this->mapValue('_explicitType', 'za.co.rsajobs.vo.GeographicInfo');
    }
}